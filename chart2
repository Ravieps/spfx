<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Organizational Chart</title>
  <style>
    /* Container for the entire org chart */
    .org-chart-container {
      display: flex;
      flex-direction: column;
      align-items: center;
      padding: 20px;
    }

    /* Grid container for team members */
    .team-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
      gap: 20px;
      width: 100%;
      max-width: 1200px;
      margin-top: 20px;
    }

    /* Individual team member card */
    .team-member {
      background: #fff;
      border: 2px solid #0a4b78;
      border-radius: 10px;
      padding: 10px;
      text-align: center;
      cursor: pointer;
      position: relative;
      transition: box-shadow 0.3s;
    }

    .team-member:hover {
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
    }

    .team-member img {
      width: 60px;
      height: 60px;
      border-radius: 50%;
    }

    .team-member .name {
      font-weight: bold;
      margin-top: 5px;
    }

    .team-member .title {
      font-size: 12px;
      color: #555;
    }

    /* Toggle icon for collapsing/expanding */
    .toggle-icon {
      position: absolute;
      top: -10px;
      right: -10px;
      background: #0a4b78;
      color: #fff;
      font-size: 12px;
      border-radius: 50%;
      width: 18px;
      height: 18px;
      line-height: 18px;
      text-align: center;
      cursor: pointer;
    }

    /* Collapsible section */
    .collapsible {
      display: none;
      margin-top: 10px;
    }

    .collapsible.show {
      display: grid;
    }

    /* Modal styles */
    #bioModal {
      position: fixed;
      top: 0; left: 0;
      width: 100%; height: 100%;
      background-color: rgba(0,0,0,0.6);
      display: flex;
      align-items: center;
      justify-content: center;
      visibility: hidden;
      opacity: 0;
      transition: opacity 0.3s ease;
      z-index: 9999;
    }

    #bioModal.show {
      visibility: visible;
      opacity: 1;
    }

    #bioModal .modal-content {
      background: #fff;
      padding: 20px 30px;
      border-radius: 10px;
      width: 320px;
      max-width: 90%;
      text-align: center;
      position: relative;
      transform: scale(0.9);
      transition: transform 0.3s ease;
      box-shadow: 0 0 20px rgba(0, 0, 0, 0.3);
    }

    #bioModal.show .modal-content {
      transform: scale(1);
    }

    #bioModal .close {
      position: absolute;
      top: 10px;
      right: 15px;
      font-size: 20px;
      cursor: pointer;
      font-weight: bold;
    }

    /* Search input */
    #searchInput {
      margin: 20px auto;
      padding: 8px 12px;
      width: 250px;
      display: block;
      text-align: center;
    }
  </style>
</head>
<body>

<input type="text" id="searchInput" placeholder="Search team member...">

<div id="orgChartContainer" class="org-chart-container"></div>

<div id="bioModal">
  <div class="modal-content">
    <span class="close" onclick="closeModal()">&times;</span>
    <img id="modalImg" src="" alt="Image" style="width: 100px; border-radius: 50%; margin-bottom: 10px;">
    <h3 id="modalName"></h3>
    <p id="modalTitle" style="font-weight: bold;"></p>
    <p id="modalBio"></p>
  </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
  $(document).ready(function () {
    const listName = "Your SharePoint List Name"; // ðŸ”„ Update this
    const siteUrl = _spPageContextInfo.webAbsoluteUrl;
    const restUrl = `${siteUrl}/_api/web/lists/getbytitle('${listName}')/items?$top=999`;

    $.ajax({
      url: restUrl,
      method: 'GET',
      headers: { 'Accept': 'application/json;odata=verbose' },
      success: function (data) {
        const people = data.d.results;
        const peopleMap = {};

        people.forEach(p => {
          peopleMap[p.Title] = {
            Name: p.Title,
            Title: p.Designation,
            ImageURL: p.ImageURL,
            Bio: p.Bio,
            Manager: p.Manager?.Title || null,
            Category: p.Category,
            Children: []
          };
        });

        Object.values(peopleMap).forEach(p => {
          if (p.Manager && peopleMap[p.Manager]) {
            peopleMap[p.Manager].Children.push(p);
          }
        });

        Object.values(peopleMap).forEach(p => {
          p.Children.sort((a, b) => a.Name.localeCompare(b.Name));
        });

        const executive = Object.values(peopleMap).find(p => p.Category === "Executive");

        if (executive) {
          const $execDiv = $('<div class="team-member" onclick="showModal(\'' + executive.ImageURL + '\', \'' + executive.Name + '\', \'' + executive.Title + '\', `' + executive.Bio + '`)"></div>');
          $execDiv.append('<img src="' + executive.ImageURL + '" alt="' + executive.Title + '">');
          $execDiv.append('<div class="name">' + executive.Name + '</div>');
          $execDiv.append('<div class="title">' + executive.Title + '</div>');
          $('#orgChartContainer').append($execDiv);

          const leadershipTeam = executive.Children.filter(p => p.Category === "Leadership Team");
          const teamMembers = executive.Children.filter(p => p.Category === "Team Member");

          if (leadershipTeam.length > 0) {
            const $leadershipHeader = $('<h3>Leadership Team</h3>');
            const $leadershipGrid = $('<div class="team-grid"></div>');
            leadershipTeam.forEach(member => {
              $leadershipGrid.append(renderTeamMember(member));
            });
            $('#orgChartContainer').append($leadershipHeader);
            $('#orgChartContainer').append($leadershipGrid);
          }

          if (teamMembers.length > 0) {
            const $teamHeader = $('<h3>Team Members</h3>');
            const $teamGrid = $('<div class="team-grid"></div>');
            teamMembers.forEach(member => {
              $teamGrid.append(renderTeamMember(member));
            });
            $('#orgChartContainer').append($teamHeader);
            $('#orgChartContainer').append($teamGrid);
          }
        }
      }
    });

    function renderTeamMember(person) {
      const hasChildren = person.Children.length > 0;
      const $memberDiv = $('<div class="team-member"></div>');
      $memberDiv.append('<img src="' + person.ImageURL + '" alt="' + person.Title + '">');
      $memberDiv.append('<div class="name">' + person.Name + '</div>');
      $memberDiv.append('<div class="title">' + person.Title + '</div>');
      $memberDiv.on('click', function () {
        showModal(person.ImageURL, person.Name, person.Title, person.Bio);
      });

      if (hasChildren) {
        const $toggle = $('<span class="toggle-icon">+</span>');
        $toggle.on('click', function (e) {
          e.stopPropagation();
          $childGrid.toggleClass('show');
          $toggle.text($childGrid.hasClass('show') ? 'âˆ’' : '+');
        });
        $memberDiv.append($toggle);

        const $childGrid = $('<div class="team-grid collapsible"></div>');
        person.Children.forEach(child => {
          $childGrid.append(renderTeamMember(child));
        });
        $memberDiv.append($childGrid);
      }

      return $memberDiv;
    }

    $('#searchInput').on('input', function () {
      const searchTerm = $(this).val().toLowerCase();

      $('.team-member').each(function () {
        const name = $(this).find('.name').text().toLowerCase();
        const match = name.includes(searchTerm);
        $(this).toggle(match);
      });
    });
  });

  function showModal(img, name, title, bio) {
    $('#modalImg').attr('src', img);
    $('#modalName').text(name);
    $('#modalTitle').text(title);
    $('#modalBio').html(bio);
    $('#bioModal').addClass('show');
  }

  function closeModal() {
    $('#bioModal').removeClass('show');
  }
</script>

</body>
</html>
