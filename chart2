<style>
  .org-chart-wrapper {
    display: flex;
    flex-direction: column;
    align-items: center;
    font-family: "Segoe UI", sans-serif;
  }

  .tree-node {
    text-align: center;
    margin: 10px;
    position: relative;
    display: inline-block;
  }

  .tree-card {
    background: #003366;
    color: #fff;
    padding: 12px 16px;
    border-radius: 8px;
    display: flex;
    align-items: center;
    cursor: pointer;
    transition: 0.3s ease;
  }

  .tree-card img {
    width: 40px;
    height: 40px;
    margin-right: 10px;
    border-radius: 50%;
    border: 2px solid #fff;
  }

  .children-container {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    margin-top: 10px;
  }

  .collapsed > .children-container {
    display: none;
  }

  .toggle-btn {
    position: absolute;
    top: -8px;
    right: -8px;
    background-color: #ffdc00;
    color: #111;
    border-radius: 50%;
    font-size: 11px;
    font-weight: bold;
    width: 22px;
    height: 22px;
    line-height: 22px;
  }

  /* Modal Styles */
  .modal {
    display: none;
    position: fixed;
    z-index: 999;
    padding-top: 100px;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0, 0, 0, 0.7);
  }

  .modal-content {
    margin: auto;
    background: #fff;
    padding: 20px;
    width: 400px;
    border-radius: 10px;
    text-align: center;
  }

  .modal-content img {
    width: 80px;
    height: 80px;
    border-radius: 50%;
  }

  .close {
    color: #aaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
    cursor: pointer;
  }
</style>

<div id="orgChartContainer" class="org-chart-wrapper"></div>

<div id="bioModal" class="modal">
  <div class="modal-content">
    <span class="close">&times;</span>
    <div id="modalImage"></div>
    <h2 id="modalTitle"></h2>
    <h4 id="modalJobTitle"></h4>
    <p id="modalBio"></p>
  </div>
</div>

<script type="text/javascript">
  async function getOrgData() {
    const endpoint = _spPageContextInfo.webAbsoluteUrl + "/_api/web/lists/getbytitle('rapidorg')/items?$select=Id,Title,JobTitle,ImageUrl,Bio,Manager/Title&$expand=Manager";
    const response = await fetch(endpoint, {
      headers: { "Accept": "application/json;odata=verbose" }
    });
    const data = await response.json();
    return data.d.results;
  }

  function buildTree(data) {
    const map = {}, tree = [];

    data.forEach(item => {
      item.children = [];
      map[item.Title] = item;
    });

    data.forEach(item => {
      const managerName = item.Manager?.Title;
      if (managerName && map[managerName]) {
        map[managerName].children.push(item);
      } else {
        tree.push(item); // Top-level (e.g. Executive)
      }
    });

    return tree;
  }

  function renderTree(nodes, container) {
    nodes.forEach(node => {
      const nodeDiv = document.createElement("div");
      nodeDiv.className = "tree-node";

      const card = document.createElement("div");
      card.className = "tree-card";
      card.innerHTML = `
        ${node.ImageUrl ? `<img src="${node.ImageUrl}" alt="${node.Title}">` : ""}
        <div><strong>${node.Title}</strong><br><small>${node.JobTitle || ""}</small></div>
      `;
      card.onclick = () => showModal(node);
      nodeDiv.appendChild(card);

      if (node.children.length > 0) {
        const toggle = document.createElement("span");
        toggle.className = "toggle-btn";
        toggle.innerText = `+${node.children.length}`;
        toggle.onclick = (e) => {
          e.stopPropagation();
          nodeDiv.classList.toggle("collapsed");
        };
        nodeDiv.appendChild(toggle);

        const childrenContainer = document.createElement("div");
        childrenContainer.className = "children-container";
        renderTree(node.children.sort((a, b) => a.Title.localeCompare(b.Title)), childrenContainer);
        nodeDiv.appendChild(childrenContainer);
        nodeDiv.classList.add("collapsed");
      }

      container.appendChild(nodeDiv);
    });
  }

  function showModal(person) {
    document.getElementById("modalTitle").innerText = person.Title;
    document.getElementById("modalJobTitle").innerText = person.JobTitle || "";
    document.getElementById("modalBio").innerText = person.Bio || "";
    document.getElementById("modalImage").innerHTML = person.ImageUrl
      ? `<img src="${person.ImageUrl}" alt="${person.Title}">`
      : "";
    document.getElementById("bioModal").style.display = "block";
  }

  document.querySelector(".close").onclick = function () {
    document.getElementById("bioModal").style.display = "none";
  };

  window.onclick = function (event) {
    const modal = document.getElementById("bioModal");
    if (event.target === modal) modal.style.display = "none";
  };

  (async function () {
    const listData = await getOrgData();
    const treeData = buildTree(listData);
    const container = document.getElementById("orgChartContainer");
    renderTree(treeData, container);
  })();
</script>
