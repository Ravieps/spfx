<div style="text-align: center;">
  <input type="text" id="searchInput" placeholder="Search team member..." style="margin: 20px; padding: 8px 12px; width: 250px;">
</div>

<div id="orgChartContainer" class="org-chart-container"></div>

<!-- Modal -->
<div id="bioModal">
  <div class="modal-content">
    <span class="close" onclick="closeModal()">&times;</span>
    <img id="modalImg" src="" alt="Image" style="width: 100px; border-radius: 50%; margin-bottom: 10px;">
    <h3 id="modalName"></h3>
    <p id="modalTitle" style="font-weight: bold;"></p>
    <p id="modalBio"></p>
  </div>
</div>

<style>
  .org-chart-container {
    display: flex;
    justify-content: center;
    padding: 20px;
    overflow-x: auto;
  }

  .org-chart ul {
    padding-top: 20px;
    position: relative;
    display: table;
    margin: auto;
  }

  .org-chart li {
    display: table-cell;
    text-align: center;
    position: relative;
    padding: 20px 5px 0 5px;
    vertical-align: top;
  }

  .org-chart li::before,
  .org-chart li::after {
    content: '';
    position: absolute;
    top: 0;
    border-top: 2px solid #ccc;
    width: 50%;
    height: 20px;
  }

  .org-chart li::before {
    right: 50%;
    border-right: 2px solid #ccc;
  }

  .org-chart li::after {
    left: 50%;
    border-left: 2px solid #ccc;
  }

  .org-chart li:only-child::before,
  .org-chart li:only-child::after {
    display: none;
  }

  .org-chart li:only-child {
    padding-top: 0;
  }

  .org-chart li:first-child::before,
  .org-chart li:last-child::after {
    border: 0 none;
  }

  .org-chart .node {
    display: inline-block;
    background: #fff;
    border: 2px solid #0a4b78;
    padding: 10px;
    border-radius: 10px;
    cursor: pointer;
    position: relative;
    transition: box-shadow 0.3s;
  }

  .org-chart .node:hover {
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
  }

  .org-chart .node img {
    width: 60px;
    height: 60px;
    border-radius: 50%;
  }

  .org-chart .name {
    font-weight: bold;
    margin-top: 5px;
  }

  .org-chart .title {
    font-size: 12px;
    color: #555;
  }

  .toggle-icon {
    position: absolute;
    top: -10px;
    right: -10px;
    background: #0a4b78;
    color: #fff;
    font-size: 12px;
    border-radius: 50%;
    width: 18px;
    height: 18px;
    line-height: 18px;
    text-align: center;
    cursor: pointer;
  }

  .collapsed > ul {
    display: none;
  }

  /* Modal styling */
  #bioModal {
    position: fixed;
    top: 0; left: 0;
    width: 100%; height: 100%;
    background-color: rgba(0,0,0,0.6);
    display: flex;
    align-items: center;
    justify-content: center;
    visibility: hidden;
    opacity: 0;
    transition: opacity 0.3s ease;
    z-index: 9999;
  }

  #bioModal.show {
    visibility: visible;
    opacity: 1;
  }

  #bioModal .modal-content {
    background: #fff;
    padding: 20px 30px;
    border-radius: 10px;
    width: 320px;
    max-width: 90%;
    text-align: center;
    position: relative;
    transform: scale(0.9);
    transition: transform 0.3s ease;
    box-shadow: 0 0 20px rgba(0, 0, 0, 0.3);
  }

  #bioModal.show .modal-content {
    transform: scale(1);
  }

  #bioModal .close {
    position: absolute;
    top: 10px;
    right: 15px;
    font-size: 20px;
    cursor: pointer;
    font-weight: bold;
  }
</style>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
  $(document).ready(function () {
    const listName = "Your SharePoint List Name";
    const siteUrl = _spPageContextInfo.webAbsoluteUrl;
    const restUrl = `${siteUrl}/_api/web/lists/getbytitle('${listName}')/items?$top=999&$orderby=Title asc`;

    $.ajax({
      url: restUrl,
      method: 'GET',
      headers: {
        'Accept': 'application/json;odata=verbose'
      },
      success: function (data) {
        const people = data.d.results;

        const peopleMap = {};
        people.forEach(p => {
          peopleMap[p.Title] = {
            Name: p.Title,
            Title: p.Designation,
            ImageURL: p.ImageURL,
            Bio: p.Bio,
            Manager: p.Manager?.Title || null,
            Children: []
          };
        });

        Object.values(peopleMap).forEach(p => {
          if (p.Manager && peopleMap[p.Manager]) {
            peopleMap[p.Manager].Children.push(p);
          }
        });

        // Sort children alphabetically
        Object.values(peopleMap).forEach(p => {
          p.Children.sort((a, b) => a.Name.localeCompare(b.Name));
        });

        const roots = Object.values(peopleMap).filter(p => !p.Manager);
        const chart = $('<div class="org-chart"><ul></ul></div>');
        roots.forEach(root => {
          chart.find('ul').append(renderNode(root));
        });

        $('#orgChartContainer').html(chart);
      }
    });

    function renderNode(person) {
      const hasChildren = person.Children.length > 0;
      const $li = $('<li></li>');

      const $node = $(`
        <div class="node" onclick="showModal('${person.ImageURL}', '${person.Name}', '${person.Title}', \`${person.Bio}\`)">
          <img src="${person.ImageURL}" alt="${person.Title}" crossorigin="anonymous">
          <div class="name">${person.Name}</div>
          <div class="title">${person.Title}</div>
        </div>
      `);

      if (hasChildren) {
        const $toggle = $('<span class="toggle-icon">−</span>');
        $toggle.on('click', function (e) {
          e.stopPropagation();
          $li.toggleClass('collapsed');
          $toggle.text($li.hasClass('collapsed') ? '+' : '−');
        });
        $node.append($toggle);
      }

      $li.append($node);

      if (hasChildren) {
        const $ul = $('<ul></ul>');
        person.Children.forEach(child => {
          $ul.append(renderNode(child));
        });
        $li.append($ul);
      }

      return $li;
    }

    $('#searchInput').on('input', function () {
      const searchTerm = $(this).val().toLowerCase();

      $('.org-chart li').each(function () {
        const nodeText = $(this).find('.name').text().toLowerCase();
        const match = nodeText.includes(searchTerm);

        $(this).toggle(match);
        if (match) {
          $(this).parents('li').removeClass('collapsed');
          $(this).parents('li').find('> .node .toggle-icon').text('−');
        }
      });
    });
  });

  function showModal(img, name, title, bio) {
    $('#modalImg').attr('src', img);
    $('#modalName').text(name);
    $('#modalTitle').text(title);
    $('#modalBio').html(bio);
    $('#bioModal').addClass('show');
  }

  function closeModal() {
    $('#bioModal').removeClass('show');
  }
</script>
