<!-- jQuery and jQuery UI for drag/drop -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<link href="https://code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css" rel="stylesheet" />
<script src="https://code.jquery.com/ui/1.13.2/jquery-ui.min.js"></script>

<style>
    .designer-container { font-family: Arial, sans-serif; margin-top: 20px; }
    .designer-container select, input[type="text"], button { margin: 5px 0; padding: 6px; }
    .tab-list { display: flex; gap: 10px; flex-wrap: wrap; margin-top: 10px; }
    .tab-block {
        border: 1px solid #ccc; padding: 10px;
        border-radius: 4px; background: #f3f3f3; min-width: 150px; position: relative;
    }
    .tab-block input { width: 100%; margin-bottom: 5px; }
    .tab-color { width: 100%; height: 30px; border: none; cursor: pointer; }
    .field-item {
        padding: 4px 8px; margin: 2px 0; background: #fff; border: 1px solid #aaa;
        border-radius: 3px; cursor: move;
    }
    .unassigned { border: 2px dashed #bbb; padding: 10px; margin-top: 15px; }
    #form-selector { margin-top: 10px; }
    button[type="button"] { background-color: #0078d4; color: white; border: none; cursor: pointer; margin-right: 10px; }
</style>

<div class="designer-container">
    <h2>ðŸ§© SharePoint Form Tab Designer</h2>

    <label for="list-selector">Select a List:</label>
    <select id="list-selector"></select>

    <div id="tab-editor-ui" style="display:none;">
        <button type="button" id="add-tab-btn">+ Add Tab</button>
        <div class="tab-list" id="tabs-container"></div>

        <div class="unassigned" id="unassigned-fields">
            <strong>Unassigned Fields:</strong>
            <div id="field-pool" class="connected-sortable"></div>
        </div>

        <div id="form-selector">
            <label>Apply To:</label>
            <label><input type="checkbox" name="formType" value="New" /> New</label>
            <label><input type="checkbox" name="formType" value="Edit" /> Edit</label>
            <label><input type="checkbox" name="formType" value="Display" /> Display</label>
            <label><input type="checkbox" name="formType" value="All" /> All</label>
        </div>

        <button type="button" id="save-apply-btn">ðŸ’¾ Save & Apply</button>
    </div>
</div>

<script>
(function($) {
    let allFields = [];
    let tabLayout = {};
    const configListName = "FormTabLayouts";

    // Fetch all lists
    function loadLists() {
        $.ajax({
            url: _spPageContextInfo.webAbsoluteUrl + "/_api/web/lists?$filter=Hidden eq false and BaseTemplate eq 100",
            method: "GET",
            headers: { "Accept": "application/json;odata=verbose" },
            success: function(data) {
                const select = $('#list-selector');
                select.append('<option value="">-- Select List --</option>');
                data.d.results.forEach(list => {
                    select.append(`<option value="${list.Title}">${list.Title}</option>`);
                });
            }
        });
    }

    // Fetch fields from selected list
    function loadFields(listTitle) {
        $.ajax({
            url: _spPageContextInfo.webAbsoluteUrl + `/_api/web/lists/getbytitle('${listTitle}')/fields?$filter=Hidden eq false and ReadOnlyField eq false`,
            method: "GET",
            headers: { "Accept": "application/json;odata=verbose" },
            success: function(data) {
                allFields = data.d.results.map(f => f.Title);
                fetchExistingLayout(listTitle);
            }
        });
    }

    // Load existing layout if any
    function fetchExistingLayout(listTitle) {
        $.ajax({
            url: _spPageContextInfo.webAbsoluteUrl + `/_api/web/lists/getbytitle('${configListName}')/items?$filter=ListName eq '${listTitle}' and FormType eq 'All'`,
            method: "GET",
            headers: { "Accept": "application/json;odata=verbose" },
            success: function(data) {
                if (data.d.results.length > 0) {
                    const json = data.d.results[0].LayoutJson;
                    try {
                        tabLayout = JSON.parse(json);
                    } catch { tabLayout = { "Tab 1": [...allFields] }; }
                } else {
                    tabLayout = { "Tab 1": [...allFields] };
                }
                buildTabUI();
            }
        });
    }

    // Build UI for tab editor
    function buildTabUI() {
        $('#tab-editor-ui').show();
        renderTabs();
    }

    function renderTabs() {
        const tabContainer = $('#tabs-container').empty();
        const usedFields = [];

        Object.entries(tabLayout).forEach(([tabName, fields], i) => {
            const tabId = `tab-${i}`;
            const block = $(`
                <div class="tab-block" data-tab="${tabId}">
                    <input type="text" class="tab-name" value="${tabName}" />
                    <input type="color" class="tab-color" value="#0078d4" />
                    <div class="connected-sortable field-zone"></div>
                </div>
            `);

            fields.forEach(f => {
                block.find('.field-zone').append(`<div class="field-item" data-name="${f}">${f}</div>`);
                usedFields.push(f);
            });

            tabContainer.append(block);
        });

        const unassigned = allFields.filter(f => !usedFields.includes(f));
        const pool = $('#field-pool').empty();
        unassigned.forEach(f => {
            pool.append(`<div class="field-item" data-name="${f}">${f}</div>`);
        });

        $(".connected-sortable").sortable({
            connectWith: ".connected-sortable",
            placeholder: "field-placeholder"
        }).disableSelection();
    }

    // Save layout to config list
    function saveTabLayout(listName, layout, forms) {
        const layoutJson = JSON.stringify(layout);

        const batchCalls = forms.map(formType => {
            return $.ajax({
                url: _spPageContextInfo.webAbsoluteUrl + `/_api/web/lists/getbytitle('${configListName}')/items`,
                method: "POST",
                contentType: "application/json;odata=verbose",
                headers: {
                    "Accept": "application/json;odata=verbose",
                    "X-RequestDigest": $("#__REQUESTDIGEST").val()
                },
                data: JSON.stringify({
                    __metadata: { type: "SP.Data.FormTabLayoutsListItem" },
                    ListName: listName,
                    FormType: formType,
                    LayoutJson: layoutJson
                })
            });
        });

        $.when(...batchCalls).done(() => {
            alert("Tab layout saved & applied!");
        }).fail(err => {
            console.error(err);
            alert("Error saving layout.");
        });
    }

    // Events
    $('#list-selector').on('change', function() {
        const selectedList = $(this).val();
        if (!selectedList) return;
        loadFields(selectedList);
    });

    $('#add-tab-btn').on('click', function() {
        const name = "Tab " + (Object.keys(tabLayout).length + 1);
        tabLayout[name] = [];
        renderTabs();
    });

    $('#save-apply-btn').on('click', function() {
        // Rebuild tabLayout from UI
        tabLayout = {};
        $('#tabs-container .tab-block').each(function() {
            const tabName = $(this).find('.tab-name').val();
            const fields = $(this).find('.field-item').map(function() {
                return $(this).data('name');
            }).get();
            tabLayout[tabName] = fields;
        });

        const selectedList = $('#list-selector').val();
        const forms = $('input[name="formType"]:checked').map(function() {
            return $(this).val();
        }).get();

        if (!forms.length) {
            alert("Please select at least one form type.");
            return;
        }

        saveTabLayout(selectedList, tabLayout, forms);
    });

    // Init
    loadLists();
})(jQuery);
</script>
