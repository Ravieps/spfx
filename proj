import os
import requests
from requests_ntlm import HttpNtlmAuth

# SharePoint credentials and config
sharepoint_site = "http://your-sharepoint-site"
document_library = "Shared Documents"
username = "DOMAIN\\your_username"
password = "your_password"
local_folder_path = "C:/path/to/excel/files"

# SharePoint folder and REST API base
upload_url_base = f"{sharepoint_site}/_api/web/GetFolderByServerRelativeUrl('{document_library}')/Files/add(url='{{filename}}',overwrite=true)"
folders_api_url = f"{sharepoint_site}/_api/web/GetFolderByServerRelativeUrl('{document_library}')/Folders"

# NTLM auth
auth = HttpNtlmAuth(username, password)

# Get existing folders from document library
response = requests.get(folders_api_url, auth=auth, headers={"Accept": "application/json;odata=verbose"})
folder_names = []

if response.status_code == 200:
    data = response.json()
    folder_names = [folder["Name"] for folder in data["d"]["results"] if not folder["Name"].startswith("Forms")]
else:
    print("Failed to fetch folder names:", response.text)
    exit()

# Loop through Excel files
not_found_folders = []

for file_name in os.listdir(local_folder_path):
    if file_name.endswith(".xlsx") or file_name.endswith(".xls"):
        file_base = os.path.splitext(file_name)[0]

        if file_base in folder_names:
            file_path = os.path.join(local_folder_path, file_name)

            with open(file_path, 'rb') as file_data:
                upload_url = f"{sharepoint_site}/_api/web/GetFolderByServerRelativeUrl('{document_library}/{file_base}')/Files/add(url='{file_name}',overwrite=true)"
                headers = {"Accept": "application/json;odata=verbose", "Content-Type": "application/octet-stream"}
                upload_response = requests.post(upload_url, data=file_data, auth=auth, headers=headers)

                if upload_response.status_code == 200:
                    print(f"Uploaded: {file_name} to folder: {file_base}")
                else:
                    print(f"Failed to upload {file_name}: {upload_response.text}")
        else:
            not_found_folders.append(file_base)

# Output folders not found
if not_found_folders:
    print("\nFolders not found:")
    for folder in not_found_folders:
        print(f"- {folder}")
else:
    print("\nAll files uploaded successfully.")
