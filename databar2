<!-- Bootstrap Icons CDN -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet">

<style>
  .databar {
    width: 100%;
    background: url('https://via.placeholder.com/1600x400') no-repeat center center;
    background-size: cover;
    padding: 40px 10px;
    box-sizing: border-box;
    color: white;
    font-family: 'Segoe UI', sans-serif;
  }

  .departments-wrapper {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-around;
    gap: 20px;
    text-align: center;
  }

  .department-block {
    flex: 1 1 30%;
    min-width: 250px;
  }

  .department-title {
    font-size: 20px;
    font-weight: bold;
    margin-bottom: 15px;
    text-transform: uppercase;
    color: #fff;
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 8px;
  }

  .department-title i {
    font-size: 22px;
  }

  .stat-row {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
    gap: 10px;
  }

  .stat-item {
    flex: 1 1 30%;
    min-width: 70px;
    background: rgba(0, 0, 0, 0.4);
    border-radius: 8px;
    padding: 15px 10px;
    box-sizing: border-box;
  }

  .number {
    font-size: 24px;
    font-weight: bold;
    color: #fff;
  }

  .label {
    font-size: 13px;
    color: #ccc;
    margin-top: 5px;
  }

  @media (max-width: 900px) {
    .department-block {
      flex: 1 1 100%;
    }
  }
</style>

<div class="databar">
  <div class="departments-wrapper" id="departmentsWrapper">
    <!-- Dynamic content will be injected here -->
  </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
  $(document).ready(function () {
    $.ajax({
      url: _spPageContextInfo.webAbsoluteUrl + "/_api/web/lists/getbytitle('DepartmentStats')/items?$select=Title,Label,Count,Icon",
      method: "GET",
      headers: {
        "Accept": "application/json;odata=verbose"
      },
      success: function (data) {
        var items = data.d.results;

        // Group by Title and store icon (first one for the department)
        var grouped = {};
        items.forEach(function (item) {
          if (!grouped[item.Title]) {
            grouped[item.Title] = {
              icon: item.Icon,
              entries: []
            };
          }
          grouped[item.Title].entries.push({
            label: item.Label,
            count: item.Count
          });
        });

        // Build HTML blocks
        for (var dept in grouped) {
          var iconClass = grouped[dept].icon || '';
          var block = `<div class="department-block">
              <div class="department-title">
                <i class="bi ${iconClass}"></i> ${dept}
              </div>
              <div class="stat-row">`;

          grouped[dept].entries.forEach(function (entry) {
            block += `
              <div class="stat-item">
                <div class="number" data-count="${entry.count}">0</div>
                <div class="label">${entry.label}</div>
              </div>`;
          });

          block += `</div></div>`;
          $('#departmentsWrapper').append(block);
        }

        // Animate numbers
        $('.number').each(function () {
          var $this = $(this);
          var countTo = parseInt($this.attr('data-count'), 10);
          $({ countNum: 0 }).animate(
            { countNum: countTo },
            {
              duration: 6000,
              easing: 'swing',
              step: function () {
                $this.text(Math.floor(this.countNum));
              },
              complete: function () {
                $this.text(this.countNum);
              }
            }
          );
        });
      },
      error: function (error) {
        console.log("Error fetching data: ", error);
      }
    });
  });
</script>
