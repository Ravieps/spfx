import os
import requests
from requests_ntlm import HttpNtlmAuth

# SharePoint Credentials & Details
sharepoint_site = 'http://your-sharepoint-site'
site_url = sharepoint_site + '/sites/yoursite'
document_library = 'Shared Documents'
username = 'DOMAIN\\yourusername'
password = 'yourpassword'

# Local folder with Excel files
local_folder = r'C:\Your\Excel\Folder'

# NTLM Auth
auth = HttpNtlmAuth(username, password)

# Upload Function
def upload_file_to_folder(local_path, folder_name, file_name):
    with open(local_path, 'rb') as file_data:
        target_url = f"{site_url}/_api/web/GetFolderByServerRelativeUrl('{document_library}/{folder_name}')/Files/add(url='{file_name}', overwrite=true)"
        headers = {'accept': 'application/json;odata=verbose'}
        response = requests.post(target_url, data=file_data, auth=auth, headers=headers)
        if response.status_code == 200:
            print(f"Uploaded: {file_name} → {folder_name}")
        else:
            print(f"Failed: {file_name} → {folder_name} | Status: {response.status_code}")
            print(response.text)

# Loop through Excel files and upload to matching folders
for file in os.listdir(local_folder):
    if file.endswith('.xlsx') or file.endswith('.xls'):
        full_path = os.path.join(local_folder, file)
        folder_name = os.path.splitext(file)[0]  # Folder name = file name without extension
        upload_file_to_folder(full_path, folder_name, file)



def upload_file_to_folder(local_path, folder_name, file_name):
    with open(local_path, 'rb') as file_data:
        target_url = f"{site_url}/_api/web/GetFolderByServerRelativeUrl('{document_library}/{folder_name}')/Files/add(url='{file_name}', overwrite=true)"
        headers = {'accept': 'application/json;odata=verbose'}
        response = requests.post(
            target_url,
            data=file_data,
            auth=auth,
            headers=headers,
            verify=False  # Disable SSL verification
        )
        if response.status_code == 200:
            print(f"Uploaded: {file_name} → {folder_name}")
        else:
            print(f"Failed: {file_name} → {folder_name} | Status: {response.status_code}")
            print(response.text)

import urllib3
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)
